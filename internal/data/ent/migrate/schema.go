// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ClustersColumns holds the columns for the "clusters" table.
	ClustersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "cluster_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "cluster_type", Type: field.TypeString, Default: "managed"},
		{Name: "cluster_spec", Type: field.TypeString},
		{Name: "version", Type: field.TypeString},
		{Name: "profile", Type: field.TypeString, Default: "default"},
		{Name: "region_id", Type: field.TypeString},
		{Name: "vpc_id", Type: field.TypeString},
		{Name: "zone_id", Type: field.TypeString},
		{Name: "enable_deletion_protection", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// ClustersTable holds the schema information for the "clusters" table.
	ClustersTable = &schema.Table{
		Name:        "clusters",
		Columns:     ClustersColumns,
		PrimaryKey:  []*schema.Column{ClustersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ComponentsColumns holds the columns for the "components" table.
	ComponentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ComponentsTable holds the schema information for the "components" table.
	ComponentsTable = &schema.Table{
		Name:        "components",
		Columns:     ComponentsColumns,
		PrimaryKey:  []*schema.Column{ComponentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClustersTable,
		ComponentsTable,
	}
)

func init() {
}
